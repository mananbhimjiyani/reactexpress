{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport { generateQuery, getFrame, getMountElement } from './utils.js';\nvar SCRIPT_ID = 'hcaptcha-api-script-id';\nvar HCAPTCHA_LOAD_FN_NAME = 'hcaptchaOnLoad'; // Prevent loading API script multiple times\n\nvar scripts = []; // Generate hCaptcha API script\n\nvar mountCaptchaScript = function mountCaptchaScript(params) {\n  if (params === void 0) {\n    params = {};\n  }\n  var element = getMountElement(params.scriptLocation);\n  delete params.scriptLocation;\n  var frame = getFrame(element);\n  var script = scripts.find(function (_ref) {\n    var scope = _ref.scope;\n    return scope === frame.window;\n  });\n  if (frame.document.getElementById(SCRIPT_ID) && script) {\n    // API was already requested\n    return script.promise;\n  }\n  var promise = new Promise(function (resolve, reject) {\n    // Create global onload callback\n    frame.window[HCAPTCHA_LOAD_FN_NAME] = resolve;\n    var domain = params.apihost || \"https://js.hcaptcha.com\";\n    delete params.apihost;\n    var script = frame.document.createElement(\"script\");\n    script.id = SCRIPT_ID;\n    script.src = domain + \"/1/api.js?render=explicit&onload=\" + HCAPTCHA_LOAD_FN_NAME;\n    script.async = params.loadAsync !== undefined ? params.loadAsync : true;\n    delete params.loadAsync;\n    script.onerror = function (event) {\n      return reject('script-error');\n    };\n    var query = generateQuery(params);\n    script.src += query !== \"\" ? \"&\" + query : \"\";\n    element.appendChild(script);\n  });\n  scripts.push({\n    promise: promise,\n    scope: frame.window\n  });\n  return promise;\n};\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HCaptcha, _React$Component);\n  function HCaptcha(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this;\n    /**\n     * Internal reference to track hCaptcha API\n     *\n     * Required as window is relative to initialization in application\n     * not where the script and iFrames have been loaded.\n     */\n\n    _this._hcaptcha = undefined; // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind(_assertThisInitialized(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind(_assertThisInitialized(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind(_assertThisInitialized(_this));\n    _this.isReady = _this.isReady.bind(_assertThisInitialized(_this)); // Event Handlers\n\n    _this.loadCaptcha = _this.loadCaptcha.bind(_assertThisInitialized(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleExpire = _this.handleExpire.bind(_assertThisInitialized(_this));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind(_assertThisInitialized(_this));\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.state = {\n      isApiReady: false,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n  var _proto = HCaptcha.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    // Once captcha is mounted intialize hCaptcha - hCaptcha\n    var element = getMountElement(this.props.scriptLocation);\n    var frame = getFrame(element);\n    this._hcaptcha = frame.window.hcaptcha || undefined;\n    var isApiReady = typeof this._hcaptcha !== 'undefined';\n    /*\n     * Check if hCaptcha has already been loaded,\n     * If Yes, render the captcha\n     * If No, create script tag and wait to render the captcha\n     */\n\n    if (isApiReady) {\n      this.setState({\n        isApiReady: true\n      }, function () {\n        _this2.renderCaptcha();\n      });\n      return;\n    }\n    this.loadCaptcha();\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (!this.isReady()) {\n      return;\n    } // Reset any stored variables / timers when unmounting\n\n    hcaptcha.reset(captchaId);\n    hcaptcha.remove(captchaId);\n  };\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    // Prevent component re-rendering when these internal state variables are updated\n    if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n      return false;\n    }\n    return true;\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n\n    // Prop Keys that could change\n    var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n    var match = keys.every(function (key) {\n      return prevProps[key] === _this3.props[key];\n    }); // If they have changed, remove current captcha and render a new one\n\n    if (!match) {\n      this.removeCaptcha(function () {\n        _this3.renderCaptcha();\n      });\n    }\n  };\n  _proto.loadCaptcha = function loadCaptcha() {\n    if (this.apiScriptRequested) {\n      return;\n    }\n    var _this$props = this.props,\n      apihost = _this$props.apihost,\n      assethost = _this$props.assethost,\n      endpoint = _this$props.endpoint,\n      host = _this$props.host,\n      imghost = _this$props.imghost,\n      hl = _this$props.languageOverride,\n      reCaptchaCompat = _this$props.reCaptchaCompat,\n      reportapi = _this$props.reportapi,\n      sentry = _this$props.sentry,\n      custom = _this$props.custom,\n      loadAsync = _this$props.loadAsync,\n      scriptLocation = _this$props.scriptLocation;\n    var mountParams = {\n      apihost: apihost,\n      assethost: assethost,\n      endpoint: endpoint,\n      hl: hl,\n      host: host,\n      imghost: imghost,\n      recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n      reportapi: reportapi,\n      sentry: sentry,\n      custom: custom,\n      loadAsync: loadAsync,\n      scriptLocation: scriptLocation\n    };\n    mountCaptchaScript(mountParams).then(this.handleOnLoad)[\"catch\"](this.handleError);\n    this.apiScriptRequested = true;\n  };\n  _proto.renderCaptcha = function renderCaptcha(onReady) {\n    var isApiReady = this.state.isApiReady;\n    if (!isApiReady) return;\n    var renderParams = Object.assign({\n      \"open-callback\": this.handleOpen,\n      \"close-callback\": this.handleClose,\n      \"error-callback\": this.handleError,\n      \"chalexpired-callback\": this.handleChallengeExpired,\n      \"expired-callback\": this.handleExpire,\n      \"callback\": this.handleSubmit\n    }, this.props, {\n      hl: this.props.hl || this.props.languageOverride,\n      languageOverride: undefined\n    });\n    var hcaptcha = this._hcaptcha; //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n    var captchaId = hcaptcha.render(this.ref.current, renderParams);\n    this.setState({\n      isRemoved: false,\n      captchaId: captchaId\n    }, function () {\n      onReady && onReady();\n    });\n  };\n  _proto.resetCaptcha = function resetCaptcha() {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (!this.isReady()) {\n      return;\n    } // Reset captcha state, removes stored token and unticks checkbox\n\n    hcaptcha.reset(captchaId);\n  };\n  _proto.removeCaptcha = function removeCaptcha(callback) {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (!this.isReady()) {\n      return;\n    }\n    this.setState({\n      isRemoved: true\n    }, function () {\n      hcaptcha.remove(captchaId);\n      callback && callback();\n    });\n  };\n  _proto.handleOnLoad = function handleOnLoad() {\n    var _this4 = this;\n    this.setState({\n      isApiReady: true\n    }, function () {\n      var element = getMountElement(_this4.props.scriptLocation);\n      var frame = getFrame(element);\n      _this4._hcaptcha = frame.window.hcaptcha; // render captcha and wait for captcha id\n\n      _this4.renderCaptcha(function () {\n        // trigger onLoad if it exists\n        var onLoad = _this4.props.onLoad;\n        if (onLoad) onLoad();\n      });\n    });\n  };\n  _proto.handleSubmit = function handleSubmit(event) {\n    var onVerify = this.props.onVerify;\n    var _this$state = this.state,\n      isRemoved = _this$state.isRemoved,\n      captchaId = _this$state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (typeof hcaptcha === 'undefined' || isRemoved) return;\n    var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n    var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n    if (onVerify) onVerify(token, ekey); //Dispatch event to verify user response\n  };\n\n  _proto.handleExpire = function handleExpire() {\n    var onExpire = this.props.onExpire;\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (!this.isReady()) {\n      return;\n    }\n    hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n    if (onExpire) onExpire();\n  };\n  _proto.handleError = function handleError(event) {\n    var onError = this.props.onError;\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (this.isReady()) {\n      // If hCaptcha runs into error, reset captcha - hCaptcha\n      hcaptcha.reset(captchaId);\n    }\n    if (onError) onError(event);\n  };\n  _proto.isReady = function isReady() {\n    var _this$state2 = this.state,\n      isApiReady = _this$state2.isApiReady,\n      isRemoved = _this$state2.isRemoved;\n    return isApiReady && !isRemoved;\n  };\n  _proto.handleOpen = function handleOpen() {\n    if (!this.isReady() || !this.props.onOpen) {\n      return;\n    }\n    this.props.onOpen();\n  };\n  _proto.handleClose = function handleClose() {\n    if (!this.isReady() || !this.props.onClose) {\n      return;\n    }\n    this.props.onClose();\n  };\n  _proto.handleChallengeExpired = function handleChallengeExpired() {\n    if (!this.isReady() || !this.props.onChalExpired) {\n      return;\n    }\n    this.props.onChalExpired();\n  };\n  _proto.execute = function execute(opts) {\n    if (opts === void 0) {\n      opts = null;\n    }\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (!this.isReady()) {\n      return;\n    }\n    if (opts && typeof opts !== \"object\") {\n      opts = null;\n    }\n    return hcaptcha.execute(captchaId, opts);\n  };\n  _proto.setData = function setData(data) {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (!this.isReady()) {\n      return;\n    }\n    if (data && typeof data !== \"object\") {\n      data = null;\n    }\n    hcaptcha.setData(captchaId, data);\n  };\n  _proto.getResponse = function getResponse() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getResponse(this.state.captchaId);\n  };\n  _proto.getRespKey = function getRespKey() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getRespKey(this.state.captchaId);\n  };\n  _proto.render = function render() {\n    var elementId = this.state.elementId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      id: elementId\n    });\n  };\n  return HCaptcha;\n}(React.Component);\nexport default HCaptcha;","map":{"version":3,"names":["_assertThisInitialized","_inheritsLoose","React","generateQuery","getFrame","getMountElement","SCRIPT_ID","HCAPTCHA_LOAD_FN_NAME","scripts","mountCaptchaScript","params","element","scriptLocation","frame","script","find","_ref","scope","window","document","getElementById","promise","Promise","resolve","reject","domain","apihost","createElement","id","src","async","loadAsync","undefined","onerror","event","query","appendChild","push","HCaptcha","_React$Component","props","_this","call","_hcaptcha","renderCaptcha","bind","resetCaptcha","removeCaptcha","isReady","loadCaptcha","handleOnLoad","handleSubmit","handleExpire","handleError","handleOpen","handleClose","handleChallengeExpired","ref","createRef","apiScriptRequested","state","isApiReady","isRemoved","elementId","captchaId","_proto","prototype","componentDidMount","_this2","hcaptcha","setState","componentWillUnmount","reset","remove","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","_this3","keys","match","every","key","_this$props","assethost","endpoint","host","imghost","hl","languageOverride","reCaptchaCompat","reportapi","sentry","custom","mountParams","recaptchacompat","then","onReady","renderParams","Object","assign","render","current","callback","_this4","onLoad","onVerify","_this$state","token","getResponse","ekey","getRespKey","onExpire","onError","_this$state2","onOpen","onClose","onChalExpired","execute","opts","setData","data","Component"],"sources":["/Users/manan/reactexpress/client/node_modules/@hcaptcha/react-hcaptcha/dist/esm/index.js"],"sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport { generateQuery, getFrame, getMountElement } from './utils.js';\nvar SCRIPT_ID = 'hcaptcha-api-script-id';\nvar HCAPTCHA_LOAD_FN_NAME = 'hcaptchaOnLoad'; // Prevent loading API script multiple times\n\nvar scripts = []; // Generate hCaptcha API script\n\nvar mountCaptchaScript = function mountCaptchaScript(params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  var element = getMountElement(params.scriptLocation);\n  delete params.scriptLocation;\n  var frame = getFrame(element);\n  var script = scripts.find(function (_ref) {\n    var scope = _ref.scope;\n    return scope === frame.window;\n  });\n\n  if (frame.document.getElementById(SCRIPT_ID) && script) {\n    // API was already requested\n    return script.promise;\n  }\n\n  var promise = new Promise(function (resolve, reject) {\n    // Create global onload callback\n    frame.window[HCAPTCHA_LOAD_FN_NAME] = resolve;\n    var domain = params.apihost || \"https://js.hcaptcha.com\";\n    delete params.apihost;\n    var script = frame.document.createElement(\"script\");\n    script.id = SCRIPT_ID;\n    script.src = domain + \"/1/api.js?render=explicit&onload=\" + HCAPTCHA_LOAD_FN_NAME;\n    script.async = params.loadAsync !== undefined ? params.loadAsync : true;\n    delete params.loadAsync;\n\n    script.onerror = function (event) {\n      return reject('script-error');\n    };\n\n    var query = generateQuery(params);\n    script.src += query !== \"\" ? \"&\" + query : \"\";\n    element.appendChild(script);\n  });\n  scripts.push({\n    promise: promise,\n    scope: frame.window\n  });\n  return promise;\n};\n\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HCaptcha, _React$Component);\n\n  function HCaptcha(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    /**\n     * Internal reference to track hCaptcha API\n     *\n     * Required as window is relative to initialization in application\n     * not where the script and iFrames have been loaded.\n     */\n\n    _this._hcaptcha = undefined; // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind(_assertThisInitialized(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind(_assertThisInitialized(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind(_assertThisInitialized(_this));\n    _this.isReady = _this.isReady.bind(_assertThisInitialized(_this)); // Event Handlers\n\n    _this.loadCaptcha = _this.loadCaptcha.bind(_assertThisInitialized(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleExpire = _this.handleExpire.bind(_assertThisInitialized(_this));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind(_assertThisInitialized(_this));\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.state = {\n      isApiReady: false,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n\n  var _proto = HCaptcha.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    // Once captcha is mounted intialize hCaptcha - hCaptcha\n    var element = getMountElement(this.props.scriptLocation);\n    var frame = getFrame(element);\n    this._hcaptcha = frame.window.hcaptcha || undefined;\n    var isApiReady = typeof this._hcaptcha !== 'undefined';\n    /*\n     * Check if hCaptcha has already been loaded,\n     * If Yes, render the captcha\n     * If No, create script tag and wait to render the captcha\n     */\n\n    if (isApiReady) {\n      this.setState({\n        isApiReady: true\n      }, function () {\n        _this2.renderCaptcha();\n      });\n      return;\n    }\n\n    this.loadCaptcha();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    } // Reset any stored variables / timers when unmounting\n\n\n    hcaptcha.reset(captchaId);\n    hcaptcha.remove(captchaId);\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    // Prevent component re-rendering when these internal state variables are updated\n    if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n\n    // Prop Keys that could change\n    var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n    var match = keys.every(function (key) {\n      return prevProps[key] === _this3.props[key];\n    }); // If they have changed, remove current captcha and render a new one\n\n    if (!match) {\n      this.removeCaptcha(function () {\n        _this3.renderCaptcha();\n      });\n    }\n  };\n\n  _proto.loadCaptcha = function loadCaptcha() {\n    if (this.apiScriptRequested) {\n      return;\n    }\n\n    var _this$props = this.props,\n        apihost = _this$props.apihost,\n        assethost = _this$props.assethost,\n        endpoint = _this$props.endpoint,\n        host = _this$props.host,\n        imghost = _this$props.imghost,\n        hl = _this$props.languageOverride,\n        reCaptchaCompat = _this$props.reCaptchaCompat,\n        reportapi = _this$props.reportapi,\n        sentry = _this$props.sentry,\n        custom = _this$props.custom,\n        loadAsync = _this$props.loadAsync,\n        scriptLocation = _this$props.scriptLocation;\n    var mountParams = {\n      apihost: apihost,\n      assethost: assethost,\n      endpoint: endpoint,\n      hl: hl,\n      host: host,\n      imghost: imghost,\n      recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n      reportapi: reportapi,\n      sentry: sentry,\n      custom: custom,\n      loadAsync: loadAsync,\n      scriptLocation: scriptLocation\n    };\n    mountCaptchaScript(mountParams).then(this.handleOnLoad)[\"catch\"](this.handleError);\n    this.apiScriptRequested = true;\n  };\n\n  _proto.renderCaptcha = function renderCaptcha(onReady) {\n    var isApiReady = this.state.isApiReady;\n    if (!isApiReady) return;\n    var renderParams = Object.assign({\n      \"open-callback\": this.handleOpen,\n      \"close-callback\": this.handleClose,\n      \"error-callback\": this.handleError,\n      \"chalexpired-callback\": this.handleChallengeExpired,\n      \"expired-callback\": this.handleExpire,\n      \"callback\": this.handleSubmit\n    }, this.props, {\n      hl: this.props.hl || this.props.languageOverride,\n      languageOverride: undefined\n    });\n    var hcaptcha = this._hcaptcha; //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n    var captchaId = hcaptcha.render(this.ref.current, renderParams);\n    this.setState({\n      isRemoved: false,\n      captchaId: captchaId\n    }, function () {\n      onReady && onReady();\n    });\n  };\n\n  _proto.resetCaptcha = function resetCaptcha() {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    } // Reset captcha state, removes stored token and unticks checkbox\n\n\n    hcaptcha.reset(captchaId);\n  };\n\n  _proto.removeCaptcha = function removeCaptcha(callback) {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    this.setState({\n      isRemoved: true\n    }, function () {\n      hcaptcha.remove(captchaId);\n      callback && callback();\n    });\n  };\n\n  _proto.handleOnLoad = function handleOnLoad() {\n    var _this4 = this;\n\n    this.setState({\n      isApiReady: true\n    }, function () {\n      var element = getMountElement(_this4.props.scriptLocation);\n      var frame = getFrame(element);\n      _this4._hcaptcha = frame.window.hcaptcha; // render captcha and wait for captcha id\n\n      _this4.renderCaptcha(function () {\n        // trigger onLoad if it exists\n        var onLoad = _this4.props.onLoad;\n        if (onLoad) onLoad();\n      });\n    });\n  };\n\n  _proto.handleSubmit = function handleSubmit(event) {\n    var onVerify = this.props.onVerify;\n    var _this$state = this.state,\n        isRemoved = _this$state.isRemoved,\n        captchaId = _this$state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (typeof hcaptcha === 'undefined' || isRemoved) return;\n    var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n    var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n    if (onVerify) onVerify(token, ekey); //Dispatch event to verify user response\n  };\n\n  _proto.handleExpire = function handleExpire() {\n    var onExpire = this.props.onExpire;\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n    if (onExpire) onExpire();\n  };\n\n  _proto.handleError = function handleError(event) {\n    var onError = this.props.onError;\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (this.isReady()) {\n      // If hCaptcha runs into error, reset captcha - hCaptcha\n      hcaptcha.reset(captchaId);\n    }\n\n    if (onError) onError(event);\n  };\n\n  _proto.isReady = function isReady() {\n    var _this$state2 = this.state,\n        isApiReady = _this$state2.isApiReady,\n        isRemoved = _this$state2.isRemoved;\n    return isApiReady && !isRemoved;\n  };\n\n  _proto.handleOpen = function handleOpen() {\n    if (!this.isReady() || !this.props.onOpen) {\n      return;\n    }\n\n    this.props.onOpen();\n  };\n\n  _proto.handleClose = function handleClose() {\n    if (!this.isReady() || !this.props.onClose) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  _proto.handleChallengeExpired = function handleChallengeExpired() {\n    if (!this.isReady() || !this.props.onChalExpired) {\n      return;\n    }\n\n    this.props.onChalExpired();\n  };\n\n  _proto.execute = function execute(opts) {\n    if (opts === void 0) {\n      opts = null;\n    }\n\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    if (opts && typeof opts !== \"object\") {\n      opts = null;\n    }\n\n    return hcaptcha.execute(captchaId, opts);\n  };\n\n  _proto.setData = function setData(data) {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    if (data && typeof data !== \"object\") {\n      data = null;\n    }\n\n    hcaptcha.setData(captchaId, data);\n  };\n\n  _proto.getResponse = function getResponse() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getResponse(this.state.captchaId);\n  };\n\n  _proto.getRespKey = function getRespKey() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getRespKey(this.state.captchaId);\n  };\n\n  _proto.render = function render() {\n    var elementId = this.state.elementId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      id: elementId\n    });\n  };\n\n  return HCaptcha;\n}(React.Component);\n\nexport default HCaptcha;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}